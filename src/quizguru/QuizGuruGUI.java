/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quizguru;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import texttospeech.*;

/**
 *
 * @author julrachele
 */
public class QuizGuruGUI extends javax.swing.JFrame {

    /**
     * Creates new form QuizGuruGUI
     */
    TextToSpeech tts = new TextToSpeech();
    boolean questionRead,question1Read,question2Read,question3Read,resultsExist,coppedBonuses,paused = false;

    int bonusCursor = 0;
    QuizGuru guruMain = new QuizGuru();
    String fullQuestion = new String();
    String question[] = null;
    private ImageIcon playIcon = new ImageIcon(getClass().getResource("/play.png"));
    private Icon pauseIcon = new ImageIcon(getClass().getResource("/pause.png"));
    public QuizGuruGUI() {
        initComponents();
        tts.setVoice("cmu-rms-hsmm");
        
    }
    public static final String VERSION = "1.2.6";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        queryTab = new javax.swing.JTabbedPane();
        queryPanel = new javax.swing.JPanel();
        categoryLabel = new javax.swing.JLabel();
        categoryDropDown = new javax.swing.JComboBox<>();
        mainLabel = new javax.swing.JLabel();
        generateButton = new javax.swing.JButton();
        tournamentLabel = new javax.swing.JLabel();
        tournamentDropDown = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayTextBox = new javax.swing.JTextArea();
        voiceLabel = new javax.swing.JLabel();
        voiceDropDown = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        julianLabel = new javax.swing.JLabel();
        enableTextBox = new javax.swing.JCheckBox();
        pausePlayButton = new javax.swing.JButton();
        generateButtonBonus = new javax.swing.JButton();
        answerPanel = new javax.swing.JPanel();
        answerPane = new javax.swing.JScrollPane();
        answerTextBox = new javax.swing.JTextArea();
        aboutPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        versionLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QuizGuru");
        setMinimumSize(new java.awt.Dimension(520, 420));
        setResizable(false);

        queryPanel.setPreferredSize(new java.awt.Dimension(510, 450));

        categoryLabel.setText("Category:");

        categoryDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Literature", "History", "Science", "Fine Arts", "Religion", "Mythology", "Philosophy", "Social Science", "Geography", "Current Events", "Trash" }));

        mainLabel.setFont(new java.awt.Font("Ubuntu", 3, 16)); // NOI18N
        mainLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainLabel.setText("QuizGuru v1.2.4");

        generateButton.setText("Get Tossup");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        tournamentLabel.setText("Tournament:");

        tournamentDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "ACF Novice", "ACF Fall", "ACF Regionals", "ACF Nationals", "Penn Bowl", "NASAT", "MUT" }));
        tournamentDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tournamentDropDownActionPerformed(evt);
            }
        });

        displayTextBox.setEditable(false);
        displayTextBox.setColumns(20);
        displayTextBox.setLineWrap(true);
        displayTextBox.setRows(5);
        displayTextBox.setWrapStyleWord(true);
        displayTextBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                displayTextBoxPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(displayTextBox);

        voiceLabel.setText("Voice:");

        voiceDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "US Man 1", "US Woman 1", "UK Woman 1", "UK Woman 2" }));
        voiceDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voiceDropDownActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        julianLabel.setFont(new java.awt.Font("Ubuntu", 2, 15)); // NOI18N
        julianLabel.setText("by Julian Rachele");

        enableTextBox.setSelected(true);
        enableTextBox.setText("Enable Text During Question");
        enableTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableTextBoxActionPerformed(evt);
            }
        });

        pausePlayButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pause.png"))); // NOI18N
        pausePlayButton.setText(" ");
        pausePlayButton.setAlignmentX(0.5F);
        pausePlayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pausePlayButtonActionPerformed(evt);
            }
        });

        generateButtonBonus.setText("Get Bonuses");
        generateButtonBonus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonBonusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout queryPanelLayout = new javax.swing.GroupLayout(queryPanel);
        queryPanel.setLayout(queryPanelLayout);
        queryPanelLayout.setHorizontalGroup(
            queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(queryPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(queryPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(queryPanelLayout.createSequentialGroup()
                        .addGroup(queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(queryPanelLayout.createSequentialGroup()
                                .addComponent(generateButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(generateButtonBonus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pausePlayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(queryPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(queryPanelLayout.createSequentialGroup()
                                        .addComponent(mainLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(julianLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(queryPanelLayout.createSequentialGroup()
                                        .addComponent(categoryLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(categoryDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(6, 6, 6)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enableTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(queryPanelLayout.createSequentialGroup()
                                .addComponent(tournamentLabel)
                                .addGap(6, 6, 6)
                                .addComponent(tournamentDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(queryPanelLayout.createSequentialGroup()
                                .addComponent(voiceLabel)
                                .addGap(12, 12, 12)
                                .addComponent(voiceDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))))
        );
        queryPanelLayout.setVerticalGroup(
            queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(queryPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(queryPanelLayout.createSequentialGroup()
                        .addGroup(queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(julianLabel)
                            .addComponent(mainLabel))
                        .addGap(6, 6, 6)
                        .addGroup(queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(categoryDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(categoryLabel))
                        .addGap(2, 2, 2)
                        .addGroup(queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(queryPanelLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(generateButton)
                                    .addComponent(generateButtonBonus)))
                            .addComponent(pausePlayButton)))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(queryPanelLayout.createSequentialGroup()
                        .addComponent(enableTextBox)
                        .addGap(6, 6, 6)
                        .addGroup(queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(queryPanelLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(tournamentLabel))
                            .addComponent(tournamentDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(queryPanelLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(voiceLabel))
                            .addComponent(voiceDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                .addContainerGap())
        );

        queryTab.addTab("Query", queryPanel);

        answerTextBox.setEditable(false);
        answerTextBox.setColumns(20);
        answerTextBox.setRows(5);
        answerPane.setViewportView(answerTextBox);

        javax.swing.GroupLayout answerPanelLayout = new javax.swing.GroupLayout(answerPanel);
        answerPanel.setLayout(answerPanelLayout);
        answerPanelLayout.setHorizontalGroup(
            answerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(answerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(answerPane, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
                .addContainerGap())
        );
        answerPanelLayout.setVerticalGroup(
            answerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(answerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(answerPane, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                .addContainerGap())
        );

        queryTab.addTab("Question History", answerPanel);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        jLabel1.setText("QuizGuru");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("A Java project for voice dictating Quiz Bowl questions");

        versionLabel.setText("Version 1.2.4");

        jLabel4.setText("by Julian Rachele");

        jLabel5.setText("Made for the Academic Team at University of South Carolina");

        jLabel6.setText("Eric Douglass");

        jLabel7.setText("Christopher King");

        jLabel8.setText("Robert Earl Lawson");

        jLabel9.setText("Bryn Douglass");

        jLabel10.setText("Julian Rachele");

        jLabel11.setText("Thomas Elgin");

        jLabel12.setText("John Huylu");

        jLabel13.setText("Joshua Clardy");

        jLabel14.setText("Julia Petersen");

        jLabel15.setIcon(new javax.swing.ImageIcon("/Users/julianrachele/GitHub/quizguru/QuizGuru/res/usc.png")); // NOI18N

        jLabel16.setIcon(new javax.swing.ImageIcon("/Users/julianrachele/GitHub/quizguru/QuizGuru/res/academicteam.png")); // NOI18N

        jLabel17.setIcon(new javax.swing.ImageIcon("/Users/julianrachele/GitHub/quizguru/QuizGuru/res/quinterest.png")); // NOI18N

        jLabel18.setText("Special thanks to Quinterest for the");

        jLabel19.setText("Quiz Bowl Questions Database");

        javax.swing.GroupLayout aboutPanelLayout = new javax.swing.GroupLayout(aboutPanel);
        aboutPanel.setLayout(aboutPanelLayout);
        aboutPanelLayout.setHorizontalGroup(
            aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, aboutPanelLayout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(aboutPanelLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addGroup(aboutPanelLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, aboutPanelLayout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addComponent(jLabel19))))))
                    .addGroup(aboutPanelLayout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(aboutPanelLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(versionLabel)
                                    .addComponent(jLabel4)))))
                    .addGroup(aboutPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(aboutPanelLayout.createSequentialGroup()
                                    .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(aboutPanelLayout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addGap(34, 34, 34))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, aboutPanelLayout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addGap(54, 54, 54)))
                                    .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(aboutPanelLayout.createSequentialGroup()
                                            .addComponent(jLabel9)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel12))
                                        .addGroup(aboutPanelLayout.createSequentialGroup()
                                            .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel11)
                                                .addComponent(jLabel10))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)))))
                                .addComponent(jLabel5))))
                    .addGroup(aboutPanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel2)))
                .addGap(36, 36, 36))
        );
        aboutPanelLayout.setVerticalGroup(
            aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel4))
                    .addComponent(versionLabel))
                .addGap(2, 2, 2)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11)
                    .addComponent(jLabel14))
                .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(aboutPanelLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19))
                    .addGroup(aboutPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15)))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        queryTab.addTab("About", aboutPanel);

        getContentPane().add(queryTab, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pausePlayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pausePlayButtonActionPerformed
        try {
            // TODO add your handling code here:
            pausePlay();
        } catch (InterruptedException ex) {
            Logger.getLogger(QuizGuruGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_pausePlayButtonActionPerformed

    private void enableTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableTextBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enableTextBoxActionPerformed

    private void voiceDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voiceDropDownActionPerformed
        // TODO add your handling code here:
        if (voiceDropDown.getSelectedItem().toString() == "US Woman 1"){
            tts.setVoice("cmu-slt-hsmm");

        } else if (voiceDropDown.getSelectedItem().toString() == "US Man 1"){
            tts.setVoice("cmu-rms-hsmm");
        } else if (voiceDropDown.getSelectedItem().toString() == "UK Woman 1"){
            tts.setVoice("dfki-poppy-hsmm");
        } else {
            tts.setVoice("dfki-prudence-hsmm");
        }
    }//GEN-LAST:event_voiceDropDownActionPerformed

    private void displayTextBoxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_displayTextBoxPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_displayTextBoxPropertyChange

    private void tournamentDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tournamentDropDownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tournamentDropDownActionPerformed

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        // TODO add your handling code here:
        StopSpeaking();
        String question[] = guruMain.GenerateResults(categoryDropDown.getSelectedItem().toString(), tournamentDropDown.getSelectedItem().toString(), questionRead);
        if (question == null){
            resultsExist = false;
        } else {
            resultsExist = true;
        }
        paused = false;
        pausePlayButton.setIcon(pauseIcon);
        if (resultsExist == true){
            if (questionRead == false){

                questionRead = true;
                fullQuestion = question[1] + " " + question[0] + " question #" + question[5] + ": \n" + question[3];
                Speak(question[3]);
                if(enableTextBox.isSelected()){
                    displayTextBox.setText(fullQuestion);
                } else{
                    displayTextBox.setText("Press Get Answer to view Question and Answer.");
                }

                generateButton.setText("Get Answer");

            } else {

                questionRead = false;
                displayTextBox.setText(fullQuestion + "\nANSWER: " + question[4]);
                Speak("ANSWER. " + question[4]);
                generateButton.setText("Get Tossup");
                answerTextBox.append(question[4] + " (from " + question[1] + " " + question[0] + " question #" + question[5] + ") \n");

            }
        } else{
            JOptionPane.showMessageDialog(new JFrame(), "Unable to produce questions under the criteria selected.", "Dialog",
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_generateButtonActionPerformed

    private void generateButtonBonusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonBonusActionPerformed
        // TODO add your handling code here:
        StopSpeaking();
        
        String speechString = null;
        
        if(coppedBonuses==false){
            question = guruMain.GenerateBonusResults(categoryDropDown.getSelectedItem().toString(), tournamentDropDown.getSelectedItem().toString());
            if (question == null){
            resultsExist = false;
            } else {
                resultsExist = true;
                coppedBonuses = true;
                if(question[3] == null || question[3].isEmpty()){
                    question[3] = "The Quinterest database neglected to put in an intro for this bonus, for 10 points each:";
                }
            }
        }
        if(bonusCursor == 0){
            paused = false;
            pausePlayButton.setIcon(pauseIcon);
        if (resultsExist == true){
            if (question1Read == false){
                question1Read = true;
                fullQuestion = question[1] + " " + question[0] + " question #" + question[10] + ": \n" + question[3] + "\n[10] " + question[4];
                speechString = question[3] + " " + question[4];
                Speak(speechString);
                if(enableTextBox.isSelected()){
                    displayTextBox.setText(fullQuestion);
                } else{
                    displayTextBox.setText("Press Get Answer to view Question and Answer.");
                }

                generateButtonBonus.setText("Get Answer");

            } else {
                
                question1Read = false;
                displayTextBox.setText(fullQuestion + "\nANSWER: " + question[5]);
                Speak("ANSWER. " + question[5]);
                generateButtonBonus.setText("Next Bonus");
                bonusCursor = 1;

            }
        } else{
            JOptionPane.showMessageDialog(new JFrame(), "Unable to produce questions under the criteria selected.", "Dialog",
                JOptionPane.ERROR_MESSAGE);
        }
        }
        else if (bonusCursor == 1){
            paused = false;
            pausePlayButton.setIcon(pauseIcon);
            if (question2Read == false){
                question2Read = true;
                fullQuestion = question[1] + " " + question[0] + " question #" + question[10] + ": \n" + question[3] + "\n[10] " + question[4] + "\nANSWER: " + question[5] + "\n[10] " + question[6];
                speechString = question[6];
                Speak(speechString.replaceAll("'","").replaceAll("/", " "));
                if(enableTextBox.isSelected()){
                    displayTextBox.setText(fullQuestion);
                } else{
                    displayTextBox.setText("Press Get Answer to view Question and Answer.");
                }

                generateButtonBonus.setText("Get Answer");

            } else {
                
                question2Read = false;
                displayTextBox.setText(fullQuestion + "\nANSWER: " + question[7]);
                Speak("ANSWER. " + question[7]);
                generateButtonBonus.setText("Next Bonus");
                bonusCursor = 2;

            }
        
        }
        else if (bonusCursor == 2){
            paused = false;
            pausePlayButton.setIcon(pauseIcon);
            if (question3Read == false){
                question3Read = true;
                fullQuestion = question[1] + " " + question[0] + " question #" + question[10] + ": \n" + question[3] + "\n[10] " + question[4] + "\nANSWER: " + question[5] + "\n[10] " + question[6] + "\nANSWER: " + question[7] + "\n[10] " + question[8];
                speechString = question[8];
                Speak(speechString);
                if(enableTextBox.isSelected()){
                    displayTextBox.setText(fullQuestion);
                } else{
                    displayTextBox.setText("Press Get Answer to view Question and Answer.");
                }

                generateButtonBonus.setText("Get Answer");

            } else {
                
                question3Read = false;
                displayTextBox.setText(fullQuestion + "\nANSWER: " + question[9]);
                Speak("ANSWER. " + question[9]);
                generateButtonBonus.setText("Get Bonuses");
                answerTextBox.append(question[1] + " " + question[0] + " question #" + question[10] + " \n");
                coppedBonuses = false;
                question1Read = false;
                question2Read = false;
                question3Read=false;
                bonusCursor = 0;

            }
            
        
        }
        
           
        
        
        
    }//GEN-LAST:event_generateButtonBonusActionPerformed

    
    
    
        
    public void Speak(String speech) {
        speech = speech.toLowerCase().replaceAll("'","").replaceAll("/", " ").replaceAll(" ii ", " 2 ").replaceAll("ftpe", "For ten points each:");
        tts.speak(speech, 2.0f, true, false);
        
        
    }
    public void pausePlay() throws InterruptedException{
        if(paused == false){
            tts.pauseSpeaking();
            paused = true;
            pausePlayButton.setIcon(playIcon);
        } else {
            tts.resumeSpeaking();
            paused = false;
            pausePlayButton.setIcon(pauseIcon);
        }
        
    }
    public void StopSpeaking(){
        tts.stopSpeaking();
    }
    
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuizGuruGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuizGuruGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuizGuruGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuizGuruGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        try {
            //</editor-fold>
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QuizGuruGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(QuizGuruGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(QuizGuruGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(QuizGuruGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuizGuruGUI().setVisible(true);
                mainLabel.setText("QuizGuru v" + VERSION);
                versionLabel.setText("Version " + VERSION);
                
            }
        });
        
        
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel aboutPanel;
    public static javax.swing.JScrollPane answerPane;
    private javax.swing.JPanel answerPanel;
    public static javax.swing.JTextArea answerTextBox;
    public static javax.swing.JComboBox<String> categoryDropDown;
    private javax.swing.JLabel categoryLabel;
    public static javax.swing.JTextArea displayTextBox;
    private javax.swing.JCheckBox enableTextBox;
    private static javax.swing.JButton generateButton;
    private static javax.swing.JButton generateButtonBonus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel julianLabel;
    private static javax.swing.JLabel mainLabel;
    private static javax.swing.JButton pausePlayButton;
    public javax.swing.JPanel queryPanel;
    private javax.swing.JTabbedPane queryTab;
    private javax.swing.JComboBox<String> tournamentDropDown;
    public static javax.swing.JLabel tournamentLabel;
    private static javax.swing.JLabel versionLabel;
    public static javax.swing.JComboBox<String> voiceDropDown;
    private javax.swing.JLabel voiceLabel;
    // End of variables declaration//GEN-END:variables
}
